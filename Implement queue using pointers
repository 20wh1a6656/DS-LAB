#include<stdio.h>
#include<stdlib.h>
struct node{
int data;
struct node*link;
};
struct node*front = NULL,*rear = NULL,*cur;
void enqueue(int ele){
cur = (struct node*)malloc(sizeof(struct node));
cur->data = ele;
cur->link = NULL;
if(front==NULL){
front = rear = cur;


}
else{
rear-&gt;link = cur;
rear = cur;
}

}
void dequeue(){
if(front == NULL){
printf(&quot;Queue underflow&quot;);
}
else if(front == rear){
printf(&quot;deleted element is %d&quot;,front-&gt;data);
front = rear = NULL;
}
else{
printf(&quot;deleted element is %d&quot;,front-&gt;data);
front=front-&gt;link;
}
}
void display(){
if(front == NULL){
printf(&quot;Queue is empty&quot;);
}
else{
cur = front;
while(cur!=NULL){
printf(&quot;%d\n&quot;,cur-&gt;data);
cur = cur-&gt;link;
}
}
}

int main(){


int ch,ele;
while(1){
printf(&quot;\n 1-enqueue \n 2-dequeue \n 3-display \n 4-exit \n&quot;);
printf(&quot;Enter your choice :&quot;);
scanf(&quot;%d&quot;,&amp;ch);
switch(ch){
case 1 : printf(&quot;Enter element to be inserted :&quot;);
scanf(&quot;%d&quot;,&amp;ele);
enqueue(ele);
break;
case 2 :
dequeue();
break;
case 3 : display();
break;
case 4 : exit(0);

}
}
}
Output:
1-enqueue
2-dequeue
3-display
4-exit
Enter your choice :1
Enter element to be inserted :1

1-enqueue
2-dequeue
3-display
4-exit
Enter your choice :1


Enter element to be inserted :3

1-enqueue
2-dequeue
3-display
4-exit
Enter your choice :3
1
3

1-enqueue
2-dequeue
3-display
4-exit
Enter your choice :2
deleted element is 1
1-enqueue
2-dequeue
3-display
4-exit
Enter your choice :3
3

1-enqueue
2-dequeue
3-display
4-exit
Enter your choice :4
