#include<stdio.h>
#include<stdlib.h>
struct node{
int data;
struct node*link;
};
struct node*top = NULL, *cur, *temp;
void push(int ele){
cur = (struct node*)malloc(sizeof(struct node));
cur-&gt;data = ele;
if(top == NULL){
cur-&gt;link = NULL;
}
else{
cur-&gt;link = top;
}
top = cur;
}
int pop(){
temp = top;
if(top == NULL){
printf(&quot;stack underflow&quot;);
}
else{
top = top-&gt;link;



return(temp-&gt;data);
free(temp);
}
}
int peek(){
return(top-&gt;data);
}
void display(){
temp = top;
while(temp != NULL){
printf(&quot;%d\n&quot;, temp-&gt;data);
temp = temp-&gt;link;
}
}
int main(){
int ch,ele;
while(1){
printf(&quot;\n1-push\n2-pop\n3-peek\n4-display\n5-exit&quot;);
printf(&quot;\nEnter your choice : &quot;);
scanf(&quot;%d&quot;, &amp;ch);
switch(ch){
case 1 : printf(&quot;Enter element : &quot;);
scanf(&quot;%d&quot;, &amp;ele);
push(ele);
break;
case 2 : printf(&quot;Deleted element id %d&quot;,pop());
break;
case 3 : if(top == NULL){
printf(&quot;stack underflow&quot;);
}
else{
printf(&quot;top most ele is %d&quot;,peek());
}
break;
case 4 : if(top == NULL){
printf(&quot;stack underflow&quot;);
}
else{
display();
}
break;
case 5 : exit(0);
}
}
}


Output:
1-push
2-pop
3-peek
4-display
5-exit
Enter your choice : 1
Enter element : 1

1-push
2-pop
3-peek
4-display
5-exit
Enter your choice : 1
Enter element : 4

1-push
2-pop
3-peek
4-display
5-exit
Enter your choice : 1
Enter element : 3

1-push
2-pop
3-peek
4-display
5-exit
Enter your choice : 4
3
4
1

1-push
2-pop
3-peek
4-display
5-exit
Enter your choice : 2
Deleted element id 3


1-push
2-pop
3-peek
4-display
5-exit
Enter your choice : 4
4
1

1-push
2-pop
3-peek
4-display
5-exit
Enter your choice : 3
top most ele is 4
1-push
2-pop
3-peek
4-display
5-exit
Enter your choice : 5
